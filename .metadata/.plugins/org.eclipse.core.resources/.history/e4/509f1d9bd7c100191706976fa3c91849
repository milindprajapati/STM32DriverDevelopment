/*
 * stm32f302xx_spi.c
 *
 *  Created on: Aug 16, 2019
 *      Author: milin
 */

#include "stm32f302xx_spi.h"

/*Clk Setup*/
void SPI_PeriClkCtrl(SPI_TypeDef *pSPIx, uint8_t status){
	if(status == ENABLE){
			if(pSPIx==SPI1){
				SPI1_PCLK_EN();
			}
			else if(pSPIx==SPI2){
				SPI2_PCLK_EN();
			}
			else if(pSPIx==SPI3){
				SPI3_PCLK_EN();
			}
		}
		else{
			if(pSPIx==SPI1){
				SPI1_PCLK_DI();
			}
			else if(pSPIx==SPI2){
				SPI2_PCLK_DI();
			}
			else if(pSPIx==SPI3){
				SPI3_PCLK_DI();
			}

		}
}

/*
 * Init/DeInit IO
 */
void SPI_Init(SPI_Handle_t *pSPIHandle){
	uint32_t tempreg =0;
	tempreg |= pSPIHandle -> SPIConfig.SPI_DeviceMode << 2;
	if(pSPIHandle -> SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_FD){
		tempreg &= ~(1 << 15);
	}else if(pSPIHandle -> SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_HD){
		tempreg |= (1 << 15);
	}else if(pSPIHandle -> SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_RX){
		tempreg &= ~(1 << 15);
		tempreg |= (1 << 10);
	}
}
void SPI_DeInit(SPI_TypeDef *pSPIx){

}

/*
 * Data Send Receive
 */
void SPI_SendData(SPI_TypeDef *pSPIx, uint8_t *pTxBuffer, uint32_t len){

}

void SPI_ReceiveData(SPI_TypeDef *pSPIx, uint8_t *pRxBuffer, uint32_t len){

}


/*
 * IRQ Config and ISR handling
 */
void SPI_IRQITConfig(uint8_t IRQNumber, uint8_t status){

}

void SPI_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority){

}

void SPI_IRQHandling(SPI_Handle_t *pSPIHandle){

}
